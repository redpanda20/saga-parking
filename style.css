/* Reset */
* {
    box-sizing: border-box;
    margin: 0;
    font: inherit;
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

:root {
    font-family: "Varela", system-ui;
    font-weight: 400;
    font-style: normal;

    --clr-accent: #c566ff;
}

body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;

    display: grid;
    grid-template-columns: [full-start] 1rem [wide-start] 1fr [content-start] min(1184px, 100vw - 4rem) [content-end] 1fr [wide-end] 1rem [full-end];
    grid-auto-rows: auto;
    row-gap: 1rem;
    margin-top: 1rem;
    min-height: 100dvh;

    @media screen and (min-width: 2048px) {
        /* Center on ultrawides where image would stretch */
        grid-template-columns: [full-start] 1fr [wide-start] 512px [content-start] 1184px [content-end] 512px [wide-end] 1fr [full-end];

    }
}

.full {
    grid-column: full;
    display: grid;
    grid-template-columns: subgrid;
}

.wide {
    grid-column: wide;
    display: grid;
    grid-template-columns: subgrid;
}

.content {
    grid-column: content;
}

header {
    position: sticky;
    top: 2rem;
    margin-bottom: auto;
}

footer {
    --_gap: 2rem;
    justify-items: center;
}

.header {
    grid-row: 1;
}

header,
main,
footer {
    grid-column: content;
    display: grid;
    grid-template-columns: subgrid;
    row-gap: 1rem;
}

.split-column {
    display: flex;
    justify-content: space-between;
}

.two-columns {
    display: grid;
    gap: var(--_gap, 1rem);

    grid-template-columns: 1fr 1fr;
    justify-items: auto;
}

@media screen and (max-width: 900px) {
    .two-columns {
        grid-template-columns: 1fr;
        justify-items: center;
    }
}

.even-columns {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));
    gap: var(--_gap, 1rem);
}

.flex-list {
    padding-left: 0;
    list-style-type: none;
    display: flex;
    gap: var(--_gap, 1rem);
    flex-grow: 1;

    .last {
        margin-left: auto;
    }
}

.flex-list[data-direction="column"] {
    flex-direction: column;

    .last {
        margin-top: auto;
    }
}

a {
    text-decoration: none;
    color: currentColor;
}

svg {
    fill: currentColor;
}

button {
    border: transparent;
    background-color: transparent;
}

.nav-link {
    position: relative;
    font-size: 1.5rem;
}

.nav-link:where(:hover, :focus-within, [aria-current="page"])::before {
    content: '';
    position: absolute;
    bottom: -0.25rem;
    width: 100%;
    border-bottom: 1px solid white;
}

.button {
    cursor: pointer;
    padding: 0.25em 0.5em;
    border-radius: 0.25rem;
    border: 1px solid white;
    outline-offset: 2px;
    font-size: 1.5rem;

    &:hover,
    &:focus-visible {
        outline: 1px solid white;
    }
}

.button[data-style="accent"] {
    color: var(--clr-accent);
    border: 1px solid var(--clr-accent);

    &:hover,
    &:focus-visible {
        outline: 1px solid var(--clr-accent);
    }
}

.button[data-style="highlight"] {
    background-color: var(--clr-accent);
    color: white;
    border: 1px solid transparent;

    &:hover,
    &:focus-visible {
        outline: 1px solid var(--clr-accent);
    }
}

.actions {
    display: flex;
    gap: 1rem;
    margin-top: auto;
    width: 100%;
}

.accent-color {
    color: var(--clr-accent)
}

*:hover>.subtle-link,
.subtle-link:focus-visible {
    color: var(--clr-accent)
}

.subtle-link {
    transition: color 200ms;
    outline: none;
}

.h1 {
    font-size: 4rem;
    font-family: "Permanent Marker", cursive;
    line-height: 1;
    grid-row: span 2;
}

.h2 {
    font-size: 2rem;
    text-wrap: balance;
}

.card {
    padding: 1rem;
    border-radius: 1rem;
    background-color: hsl(0 0% 100% / 0.2);

    display: flex;
    flex-direction: column;
    gap: var(--_gap, 1rem);
}

.card.left {
    border-radius: 1rem 0 0 1rem;
}

.card.right {
    border-radius: 0 1rem 1rem 0;
}

.card[data-style="naked"] {
    background-color: transparent;
    padding: 0;
}

/* Specific elements */

.background {
    border-radius: 2rem;
    object-fit: cover;
    width: 100%;
}

.logo,
.nav-menu {
    background-color: hsl(0 0% 0% / 0.2);
    display: flex;
    align-items: center;
    padding: 0.5rem;
    border-radius: 0.5rem;
    backdrop-filter: blur(32px);
}

.logo {
    margin-right: auto;
}

.nav-menu {
    margin-left: auto;
}

.footer {
    margin-top: auto;
    background-color: black;
    padding: 1rem;
}

.form {
    grid-row: span 2;
    display: grid;
    gap: var(--_gap, 1rem);
}

.input-wrapper {
    --_line-color: rgb(255 255 255 / 0.5);

    position: relative;
    border-radius: 0.5rem;
    border: 1px solid var(--_line-color);

    padding-inline: 0.5rem;
    padding-block-start: 0.25rem;
    margin-top: 0.25rem;

    label {
        position: absolute;
        margin-block: auto;
        color: var(--_line-color);
        font-size: 0.75rem;

        background-color: #49494e;
        padding-inline: 0.25rem;
        top: -0.5rem;

        transition: top 100ms ease-in-out;
    }

    input,
    textarea {
        background-color: transparent;
        border: none;
        outline: none;
    }

    textarea {
        resize: none;
    }

    &:not(:focus-within):has(:placeholder-shown) label {
        top: 0.5rem;
    }

    &:focus-within,
    &:not(:has(:placeholder-shown)) {
        --_line-color: rgb(255 255 255 / 1);
    }
}

.email-form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;

    * {
        grid-column: span 2;
    }

    *:has(input) {
        grid-column: span 1;
    }
}

@media screen and (min-width: 650px) {
    .mobile {
        display: none;
    }
}

@media screen and (max-width: 650px) {
    .desktop {
        display: none;
    }
}

/* Debug */
a[href=""] {
    background-color: red !important;
}

.mobile-menu {
    margin-left: auto;
    height: 100%;
    max-height: 100%;
    width: 40vw;
    border: none;

    padding: 2rem;

    &> :first-child {
        margin-left: auto;
    }

    &> :last-child {
        flex-grow: 1;
    }

    .actions * {
        margin-left: auto;
    }
}

::backdrop {
    background-color: hsl(0 0% 0% / 0.4);
}